/*
//    BOSCH REXROTH
//
//    Copyright (c) Bosch Rexroth AG 2009
//    Internet: http://www.boschrexroth.com
//
//    Project Name  : NYCe4000_SW
//    %full_filespec:  sacfclapi.h`9:incl:1 % (SYNERGY INFO, do not change)
//
//    Description   : Public interface of NYCe4000 extensions
*/

#ifndef __NYCE_EXTENTIONS_API_H__
#define __NYCE_EXTENTIONS_API_H__

#include "nycedefs.h"
#include "nyceextdefs.h"
#include "sacapi.h"


#ifdef __cplusplus
extern "C" {
#endif

/**
 * @ingroup sac
 * @defgroup ext_fcl FCL functionality
 *
 */


/** 
 *  @ingroup ext_fcl
 *
 *  @brief Configure FCL for a given axis. 
 * 
 *  @param[in] axisId   - Connected axis, which is used by FCL.
 *  @param[in] pConfig  - pointer to the configuration.
 * 
 *  @remarks
 *  This function can only be called in the FCL_IDLE state.
 *  When the function returns successful, FCL will enter the MASTER_INACTIVE state. \n
 *  Once EnDat channels are configured successfully, any new call to SacFclInitialize with EnDat configuration,
 *  the new EnDat configuration must be the same as was specified with the previous call. Selecting other EnDat devices 
 *  will return an error. \n
 *  If EnDat channels are configured and a new call to SacFclInitialize specifies analogue inputs for S1 and S2,
 *  the EndDat channels will be shutdown. \n
 *  This behavior is enforced by the fact that EnDat channels need to be used in the FCL IDLE state
 *  when asynchronous EnDat communication is needed, e.g. when an EnDat error is detected. Therefore, EnDat channels
 *  are not shutdown when SacFclShutdown is called. \n
 *  To shutdown the EnDat channels and free there channel resources, you may call SacFclInitialize with analogue 
 *  inputs as the source type of S1 and S2, followed by a SacFclShutdown.
 */
SAC_EXPORT NYCE_STATUS NYCE_API SacFclInitialize( SAC_AXIS axisId , const SAC_FCL_CONFIG *pConfig);


/** 
 *  @ingroup ext_fcl
 *
 *  @brief Shutdown FCL for a given axis. 
 * 
 *  @param[in] axisId   - Connected axis, which is initialized for FCL.
 * 
 *  @remarks
 *  When the function returns successful, FCL will enter the IDLE state.
 *  If FCL has configured EnDat channels for S1 and S2, these EnDat channels are not shutdown by this function,
 *  but they are put in a synchronous communication mode. In the FCL states MASTER_INACTIVE and MASTER_ACTIVE
 *  the EnDat channels are in synchronous communication mode.
 */
SAC_EXPORT NYCE_STATUS NYCE_API SacFclShutdown( SAC_AXIS axisId );


/** 
 *  @ingroup ext_fcl
 *
 *  @brief Sets FCL in MASTER_ACTIVE state.
 * 
 *  @param[in] axisId   - Connected axis, which is initialized for FCL.
 * 
 *  @remarks
 *  In the MASTER_ACTIVE state, FCL will generate setpoints in a closed loop mode from S1 and S2.
 */
SAC_EXPORT NYCE_STATUS NYCE_API SacFclActivate( SAC_AXIS axisId );


/**
 *  @ingroup ext_fcl
 *
 *  @brief Sets FCL in MASTER_INACTIVE state.
 * 
 *  @param[in] axisId   - Connected axis, which is initialized for FCL.
 *  In the MASTER_INACTIVE state, FCL will only process the input signals S1 and S2 but no setpoints are generated by FCL.
 */
SAC_EXPORT NYCE_STATUS NYCE_API SacFclDeactivate( SAC_AXIS axisId );


/**
 *  @ingroup ext_fcl
 *
 *  @brief Get the current configuration of FCL. 
 * 
 *  @param[in]  axisId   - Connected axis, which is used by FCL.
 *  @param[out] pConfig - pointer to the returned configuration.
 *  
 *  @return
 *  NYCE_OK    -State is not IDLE, or SacFclInitialize configured EnDat channels for S1 and S2 before and only this EnDat configuration is returned in pConfig.
 *  SAC_FCL_ERR_INVALID_STATE  -State is not valid.
 *
 *  @remarks
 *  In IDLE state, only the EnDat configuration in pConfig is valid.
 */
SAC_EXPORT NYCE_STATUS NYCE_API SacFclGetConfiguration( SAC_AXIS axisId , SAC_FCL_CONFIG *pConfig);


/** 
 *  @ingroup ext_fcl
 *
 *  @brief Read diagnostics data from an EnDat channel.
 * 
 *  @param[in]  axisId   - Connected axis, which is used by FCL and uses EnDat interface for input signals S1 and S2.
 *  @param[in]  sensorId - Identifies the input signal. Can be SAC_FCL_SENSOR_S1 or SAC_FCL_SENSOR_S2. The signal must be 
 *                         configured as an EnDat channel. 
 *  @param[in]  dataId   - Data identifier of the word to read.
 *  @param[out] pValue   - pointer to the returned output of the read data value.
 * 
 *  @return
 *  NYCE_OK                                 when successful.
 *  SAC_FCL_ERR_INVALID_STATE               state is not IDLE. 
 *  SAC_FCL_ERR_INVALID_NO_ENDAT_CHANNEL    the sensor is not configured as an EnDat channel.
 *  SAC_FCL_ERR_INVALID_DATA_ID             the given dataId is invalid.
 *  
 *  @remarks
 *  This function may only be called in the FCL_IDLE state AND after a successful call to SacFclInitialize
 *  which configured EnDat channels for S1 and S2. Typically a SacFclShutdown is done prior to read EnDat diagnostics data
 *  in order to go into the IDLE state first.
 *  Note that SacFclShutdown will NOT shutdown the EnDat channels which are configured with SacFclInitialize.
 *
 *  @see SacFclInitialize 
 *  @see SacFclShutdown 
 */
SAC_EXPORT NYCE_STATUS NYCE_API SacFclReadDiagData( SAC_AXIS axisId , SAC_FCL_SENSOR_ID sensorId , 
                                                    SAC_FCL_DIAG_DATA_ID dataId , uint32_t *pValue );

#ifdef __cplusplus
}
#endif

#endif  /*  __NYCE_EXTENTIONS_API_H__ */
